name: Upload APK in Releases
on:
  # Triggers the workflow on push or pull request events but only for default and protected branches
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  apk:
    name: Upload APK in Releases
    runs-on: ubuntu-18.04

    env:
      commitmsg: ${{ github.event.head_commit.message }}
    steps:
      - uses: actions/checkout@v1
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Grant Permission to Execute
        run: chmod +x gradlew



      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDDHHSS
          utcOffset: "+04:30"
      - name: Use current time
        env:
          TIME: "${{ steps.current-time.outputs.time }}"
          R_TIME: "${{ steps.current-time.outputs.readableTime }}"
          F_TIME: "${{ steps.current-time.outputs.formattedTime }}"
        run: echo $TIME $R_TIME $F_TIME $YEAR $DAY


      - name: Build debug APK
        run: bash ./gradlew assembleDebug --stacktrace

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v3.1.1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}


      - name: Upload APK to Github Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: app
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ steps.current-time.outputs.formattedTime }}
          release_name: ${{ steps.current-time.outputs.formattedTime }}
          draft: false
          prerelease: false
          body: ${{ env.commitmsg }}

      - name: Upload APK to Release
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./app/build/outputs/apk/debug/app-debug.apk
          asset_name: app-debug.apk
          asset_content_type: application/zip
